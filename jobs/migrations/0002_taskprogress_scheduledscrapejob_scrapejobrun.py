# Generated by Django 5.2.7 on 2025-10-05 08:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('current_step', models.CharField(default='Starting...', max_length=200)),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('total_sources', models.PositiveIntegerField(default=0)),
                ('completed_sources', models.PositiveIntegerField(default=0)),
                ('current_source', models.CharField(blank=True, max_length=50)),
                ('jobs_scraped', models.PositiveIntegerField(default=0)),
                ('companies_found', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Task Progress',
                'verbose_name_plural': 'Task Progress',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledScrapeJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for this scheduled job', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of what this job does')),
                ('job_title', models.CharField(help_text='Job title to search for', max_length=200)),
                ('location', models.CharField(blank=True, help_text='Location to search in', max_length=200)),
                ('sources', models.JSONField(default=list, help_text='List of sources to scrape (indeed, glassdoor, etc.)')),
                ('max_jobs', models.PositiveIntegerField(default=25, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
                ('schedule_type', models.CharField(choices=[('hourly', 'Every Hour'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('custom', 'Custom Cron')], default='daily', max_length=20)),
                ('cron_expression', models.CharField(blank=True, help_text='Custom cron expression (only for custom schedule type)', max_length=100)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this job should run')),
                ('last_run', models.DateTimeField(blank=True, help_text='When this job last ran', null=True)),
                ('next_run', models.DateTimeField(blank=True, help_text='When this job will run next', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Scheduled Scrape Job',
                'verbose_name_plural': 'Scheduled Scrape Jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapeJobRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('celery_task_id', models.CharField(help_text='Celery task ID', max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('search_criteria', models.JSONField(help_text='Search parameters used for this run')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('jobs_found', models.PositiveIntegerField(default=0)),
                ('companies_found', models.PositiveIntegerField(default=0)),
                ('errors', models.JSONField(default=list, help_text='List of errors encountered')),
                ('result_summary', models.JSONField(default=dict, help_text='Detailed results and metrics')),
                ('scheduled_job', models.ForeignKey(blank=True, help_text='Reference to scheduled job (null for manual runs)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='jobs.scheduledscrapejob')),
                ('triggered_by', models.ForeignKey(blank=True, help_text='User who triggered this run (for manual runs)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Scrape Job Run',
                'verbose_name_plural': 'Scrape Job Runs',
                'ordering': ['-started_at'],
            },
        ),
    ]
